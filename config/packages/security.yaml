security:
    # Configuration des password hashers
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Configuration des providers d'utilisateurs
    providers:
        users_in_memory: { memory: null }
        # Assurez-vous que 'app_user_provider' est correctement défini si utilisé
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Configuration des firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_in_memory

            # Configuration de la déconnexion
            logout:
                path: /logout

        # Ajout du firewall 'api' pour l'authentification par token
        api:
            stateless: true
            provider: app_user_provider 
            jwt: ~
            json_login:
                check_path: app_api_login

    # Contrôle d'accès
    access_control:
        # Exemple de contrôle d'accès existant
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        # Ajout des nouvelles règles de contrôle d'accès pour l'API
        - { path: ^/api/registration, roles: PUBLIC_ACCESS } 
        - { path: ^/api/login, roles: PUBLIC_ACCESS } 
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
